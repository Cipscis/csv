{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./csv.js","webpack:///./docs/assets/js/src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","stringify","parse","csv","data","options","transpose","sanitise","rows","_shape","_escape","_join","maxLength","reduce","row","Math","max","length","iMax","jMax","j","iRow","iCol","cellValue","push","match","replace","join","csvString","_tokenise","_validate","mapper","map","tokens","inQuote","wasQuote","tokenStart","char","comma","quote","newline","eof","Error","token","substring","rowLength","stringifyInput","test","parseInput","document","querySelectorAll","forEach","$el","addEventListener","$input","querySelector","$output","$transpose","$sanitise","HTMLInputElement","checked","str","innerHTML","JSON","$mapIntegers","parseInt"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const { stringify, parse } = (() => {\n\tconst csv = {\n\t\tstringify: function (data, options) {\n\t\t\toptions = options || {};\n\t\t\toptions.transpose = options.transpose || false;\n\t\t\toptions.sanitise = options.sanitise || false;\n\n\t\t\t// Enforce square data and apply CSV escaping, then convert to string\n\t\t\tlet rows = data;\n\n\t\t\trows = csv._shape(data, options);\n\t\t\trows = csv._escape(rows, options);\n\n\t\t\trows = csv._join(rows);\n\n\t\t\treturn rows;\n\t\t},\n\n\t\t_shape: function (data, options) {\n\t\t\t// Pad missing cells with empty strings and,\n\t\t\t// if necessary, transpose the data\n\n\t\t\tconst transpose = options.transpose;\n\n\t\t\tconst maxLength = data.reduce((maxLength, row) => Math.max(maxLength, row.length), 0);\n\n\t\t\t// Flip rows and columns if transposing data\n\t\t\tconst iMax = transpose ? maxLength : data.length;\n\t\t\tconst jMax = transpose ? data.length : maxLength;\n\n\t\t\tlet rows = [];\n\t\t\tfor (let i = 0; i < iMax; i++) {\n\t\t\t\tlet row = [];\n\t\t\t\tfor (let j = 0; j < jMax; j++) {\n\t\t\t\t\tlet iRow = transpose ? j : i;\n\t\t\t\t\tlet iCol = transpose ? i : j;\n\n\t\t\t\t\tlet cellValue = data[iRow][iCol];\n\n\t\t\t\t\tif (iCol >= data[iRow].length) {\n\t\t\t\t\t\tcellValue = '';\n\t\t\t\t\t}\n\n\t\t\t\t\trow.push(cellValue);\n\t\t\t\t}\n\t\t\t\trows.push(row);\n\t\t\t}\n\n\t\t\treturn rows;\n\t\t},\n\n\t\t_escape: function (rows, options) {\n\t\t\t// Make sure any cells containing \" or , or a newline are escaped appropriately\n\n\t\t\tconst sanitise = options.sanitise;\n\n\t\t\tfor (let i = 0; i < rows.length; i++) {\n\t\t\t\tlet row = rows[i];\n\n\t\t\t\tfor (let j = 0; j < row.length; j++) {\n\t\t\t\t\tif (typeof row[j] === 'undefined') {\n\t\t\t\t\t\t// Replace undefined with ''\n\t\t\t\t\t\trow[j] = '';\n\t\t\t\t\t} else if (typeof row[j] !== 'string') {\n\t\t\t\t\t\t// Convert to string\n\t\t\t\t\t\trow[j] = '' + row[j];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (sanitise) {\n\t\t\t\t\t\t// Prevent spreadsheet software like\n\t\t\t\t\t\t// Excel from trying to execute code\n\t\t\t\t\t\tif (row[j].match(/^[=\\-+@]/)) {\n\t\t\t\t\t\t\trow[j] = '\\t' + row[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (row[j].match(/,|\"|\\n/)) {\n\n\t\t\t\t\t\t// Turn any double quotes into escaped double quotes\n\t\t\t\t\t\trow[j] = row[j].replace(/\"/g, '\"\"');\n\n\t\t\t\t\t\t// Wrap cell in double quotes\n\t\t\t\t\t\trow[j] = '\"' + row[j] + '\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn rows;\n\t\t},\n\n\t\t_join: function (rows) {\n\t\t\tfor (let i = 0; i < rows.length; i++) {\n\t\t\t\trows[i] = rows[i].join(',');\n\t\t\t}\n\t\t\trows = rows.join('\\n');\n\n\t\t\treturn rows;\n\t\t},\n\n\n\t\tparse: function (csvString, options) {\n\t\t\tlet rows = csv._tokenise(csvString);\n\n\t\t\tcsv._validate(rows);\n\n\t\t\tif (options && options.mapper) {\n\t\t\t\trows = rows.map((row) => row.map(options.mapper));\n\t\t\t}\n\n\t\t\treturn rows;\n\t\t},\n\n\t\t_tokenise: function (csvString) {\n\t\t\t// Walk through each character and produce an array of tokens\n\n\t\t\tlet tokens = [];\n\n\t\t\t// Remove carriage returns\n\t\t\tcsvString = csvString.replace(/\\r/g, '');\n\n\t\t\tlet inQuote = false;\n\t\t\tlet wasQuote = false;\n\n\t\t\tlet tokenStart = 0;\n\t\t\tlet row = [];\n\t\t\tfor (let i = 0; i < csvString.length; i++) {\n\t\t\t\tlet char = csvString[i];\n\n\t\t\t\tlet comma = char === ',';\n\t\t\t\tlet quote = char === '\"';\n\t\t\t\tlet newline = char === '\\n';\n\t\t\t\tlet eof = i === csvString.length -1; // eof - End Of File\n\n\t\t\t\tif (inQuote) {\n\t\t\t\t\t// Characters may be delimited\n\t\t\t\t\tif (quote) {\n\t\t\t\t\t\t// Check if the next character is another double quote, i.e. if it is escaped\n\t\t\t\t\t\tlet nextChar = csvString[i+1];\n\n\t\t\t\t\t\tif (nextChar === '\"') {\n\t\t\t\t\t\t\t// This and the next character combined make an escaped double quote,\n\t\t\t\t\t\t\t// so the quote has not ended and we should skip over the next character\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// The quote has ended\n\t\t\t\t\t\t\tinQuote = false;\n\t\t\t\t\t\t\twasQuote = true;\n\n\t\t\t\t\t\t\tif (!eof) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (eof) {\n\t\t\t\t\t\tthrow new Error(`CSV parse: Reached end of file before ending quote. At index ${i}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!inQuote && (comma || newline || eof)) {\n\t\t\t\t\t// These are the characters that denote the end of a token\n\t\t\t\t\tlet token = csvString.substring(tokenStart, i+1);\n\n\t\t\t\t\tif (comma || newline) {\n\t\t\t\t\t\t// Don't keep the separator\n\t\t\t\t\t\ttoken = token.substring(0, token.length - 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (wasQuote) {\n\t\t\t\t\t\twasQuote = false;\n\n\t\t\t\t\t\t// Remove start and end quotes\n\t\t\t\t\t\ttoken = token.substring(1, token.length - 1);\n\n\t\t\t\t\t\t// Replace escaped quotes\n\t\t\t\t\t\ttoken = token.replace(/\"\"/g, '\"');\n\t\t\t\t\t}\n\t\t\t\t\trow.push(token);\n\n\t\t\t\t\tif (comma && eof) {\n\t\t\t\t\t\t// It's the end of the last token, and the last cell is empty\n\t\t\t\t\t\trow.push('');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (newline || eof) {\n\t\t\t\t\t\ttokens.push(row);\n\t\t\t\t\t\tif (newline) {\n\t\t\t\t\t\t\trow = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttokenStart = i+1;\n\t\t\t\t} else if (wasQuote) {\n\t\t\t\t\tthrow new Error(`CSV parse: A value must be complete immediately after closing a quote. At index ${i}`);\n\t\t\t\t} else if (quote) {\n\t\t\t\t\tinQuote = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tokens;\n\t\t},\n\n\t\t_validate: function (rows) {\n\t\t\t// Each row of a CSV should have the same length;\n\n\t\t\tif (rows && rows.length > 1) {\n\t\t\t\tlet rowLength = rows[0].length;\n\t\t\t\tfor (let i = 1; i < rows.length; i++) {\n\t\t\t\t\tlet row = rows[i];\n\n\t\t\t\t\tif (row.length !== rowLength) {\n\t\t\t\t\t\tthrow new Error(`CSV parse: Row ${i} does not have the same length as the first row (${rowLength})`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tstringify: csv.stringify,\n\t\tparse: csv.parse,\n\t};\n})();\n\nexport { stringify, parse };\n","import { stringify, parse } from 'csv';\n\nconst stringifyInput = [\n\t['Numbers', 0, 1, 2, 3],\n\t['Test values', 'test', {test: true}],\n\t['Falsey values', false, '', [], null],\n\t['Values to sanitise', '=GET(malicious_code)', '-FETCH(url)', '+DO(nefarious_thing)', '@POST(data)'],\n];\n\nconst parseInput = `Numbers,0,1,2,3\nTest values,test,{test: true},,\nFalsey values,false,'',[],null\nValues to sanitise,=GET(malicious_code),-FETCH(url),+DO(nefarious_thing),@POST(data)`;\n\ndocument.querySelectorAll('.js-stringify__button').forEach(($el) => $el.addEventListener('click', () => {\n\tconst $input = document.querySelector('.js-stringify__input');\n\tconst $output = document.querySelector('.js-stringify__output');\n\n\tconst $transpose = document.querySelector('.js-stringify__transpose');\n\tconst $sanitise = document.querySelector('.js-stringify__sanitise');\n\n\tconst transpose = $transpose instanceof HTMLInputElement ? $transpose.checked : false;\n\tconst sanitise = $sanitise instanceof HTMLInputElement ? $sanitise.checked : false;\n\n\tconst options = {\n\t\ttranspose,\n\t\tsanitise,\n\t};\n\n\tconst str = stringify(stringifyInput, options);\n\n\t$input.innerHTML = JSON.stringify(stringifyInput, null, '\\t');\n\t$output.innerHTML = str;\n}));\n\ndocument.querySelectorAll('.js-parse__button').forEach(($el) => $el.addEventListener('click', () => {\n\tconst $input = document.querySelector('.js-parse__input');\n\tconst $output = document.querySelector('.js-parse__output');\n\n\tconst $mapIntegers = document.querySelector('.js-parse__map-integers');\n\tconst mapIntegersChecked = $mapIntegers instanceof HTMLInputElement ? $mapIntegers.checked : false;\n\n\tconst options = {};\n\tif (mapIntegersChecked) {\n\t\toptions.mapper = (value) => {\n\t\t\tif (+value === parseInt(value, 10)) {\n\t\t\t\treturn +value;\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\t};\n\n\tconst data = parse(parseInput, options);\n\n\t$input.innerHTML = parseInput;\n\t$output.innerHTML = JSON.stringify(data, null, '\\t');\n}));\n"],"sourceRoot":""}